import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  TextInput,
  ScrollView,
  ActivityIndicator,
  Alert,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { useAuth } from '../contexts/AuthContext';
import { supabase } from '../services/supabase';

// жЃйжЂЊт║юуюїсЃЄсЃ╝сѓ┐
const PREFECTURES = [
  "тїЌТхижЂЊ", "жЮњТБ«уюї", "т▓ЕТЅІуюї", "т««тЪјуюї", "уДІућ░уюї", "т▒▒тйбуюї", "удЈт│Хуюї",
  "УїетЪјуюї", "ТаЃТюеуюї", "уЙцждгуюї", "тЪ╝ујЅуюї", "тЇЃУЉЅуюї", "ТЮ▒С║гжЃй", "уЦътЦѕтиЮуюї",
  "Тќ░ТйЪуюї", "т»їт▒▒уюї", "уЪ│тиЮуюї", "удЈС║Ћуюї", "т▒▒Тбеуюї", "жЋижЄјуюї", "т▓љжўюуюї",
  "жЮЎт▓Ауюї", "ТёЏуЪЦуюї", "СИЅжЄЇуюї", "Т╗ІУ│ђуюї", "С║гжЃйт║ю", "тцДжўфт║ю", "тЁхт║Фуюї",
  "тЦѕУЅ»уюї", "тњїТГїт▒▒уюї", "ж│ЦтЈќуюї", "т│ХТа╣уюї", "т▓Ат▒▒уюї", "т║Ѓт│Хуюї", "т▒▒тЈБуюї",
  "тЙ│т│Хуюї", "ждЎтиЮуюї", "ТёЏтфЏуюї", "жФўуЪЦуюї", "удЈт▓Ауюї", "СйљУ│ђуюї", "жЋит┤јуюї",
  "уєіТюгуюї", "тцДтѕєуюї", "т««т┤јуюї", "ж╣┐тЁљт│Хуюї", "Т▓ќуИёуюї"
];

export default function InitialSetupScreen() {
  const { user } = useAuth();
  const [currentStep, setCurrentStep] = useState(1);
  const [loading, setSaving] = useState(false);
  
  // сЃЋсѓЕсЃ╝сЃасЃЄсЃ╝сѓ┐
  const [formData, setFormData] = useState({
    name: '',
    age: 15,
    grade: '',
    prefecture: '',
    school_name: '',
    monthly_budget: 30000,
    savings_balance: 0,
  });

  const handleSave = async () => {
    if (!user) return;
    
    // т┐ЁжаѕжаЁуЏ«сЂ«сЃЂсѓДсЃЃсѓ»
    if (!formData.name || !formData.grade || !formData.prefecture) {
      Alert.alert('тЁЦтіЏсѓесЃЕсЃ╝', 'т┐ЁжаѕжаЁуЏ«сѓњсЂЎсЂ╣сЂдтЁЦтіЏсЂЌсЂдсЂЈсЂасЂЋсЂё');
      return;
    }
    
    setSaving(true);
    try {
      const { error } = await supabase
        .from('user_profiles')
        .upsert({
          id: user.id,
          name: formData.name,
          age: formData.age,
          grade: formData.grade,
          prefecture: formData.prefecture,
          school_name: formData.school_name,
          monthly_budget: formData.monthly_budget,
          savings_balance: formData.savings_balance,
          school_type: 'high_school',
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString(),
        });

      if (error) throw error;

      Alert.alert('УеГт«џт«їС║є', 'сЃЌсЃГсЃЋсѓБсЃ╝сЃФУеГт«џсЂїт«їС║єсЂЌсЂЙсЂЌсЂЪ№╝Ђ', [
        { text: 'OK', onPress: () => {
          // RootNavigatorсЂїУЄфтІЋсЂДтѕЮТюЪУеГт«џт«їС║єсѓњТцютЄ║сЂЌсЂдсЃАсѓцсЃ│ућ╗жЮбсЂФжЂиуД╗сЂЌсЂЙсЂЎ
        }}
      ]);
    } catch (error) {
      console.error('сЃЌсЃГсЃЋсѓБсЃ╝сЃФС┐ЮтГўсѓесЃЕсЃ╝:', error);
      Alert.alert('сѓесЃЕсЃ╝', 'сЃЌсЃГсЃЋсѓБсЃ╝сЃФсЂ«С┐ЮтГўсЂФтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪ');
    } finally {
      setSaving(false);
    }
  };

  const renderStep1 = () => (
    <View style={styles.stepContent}>
      <Text style={styles.stepTitle}>тЪ║ТюгТЃЁта▒сѓњтЁЦтіЏсЂЌсЂдсЂЈсЂасЂЋсЂё</Text>
      
      <View style={styles.inputGroup}>
        <Text style={styles.label}>сЂітљЇтЅЇ *</Text>
        <TextInput
          style={styles.input}
          value={formData.name}
          onChangeText={(text) => setFormData({ ...formData, name: text })}
          placeholder="ућ░СИГтцфжЃј"
          placeholderTextColor="#9CA3AF"
        />
      </View>

      <View style={styles.inputGroup}>
        <Text style={styles.label}>т╣┤жйб</Text>
        <View style={styles.ageSelector}>
          {[15, 16, 17, 18].map((age) => (
            <TouchableOpacity
              key={age}
              style={[
                styles.ageOption,
                formData.age === age && styles.ageOptionSelected
              ]}
              onPress={() => setFormData({ ...formData, age })}
            >
              <Text style={[
                styles.ageOptionText,
                formData.age === age && styles.ageOptionTextSelected
              ]}>
                {age}ТГ│
              </Text>
            </TouchableOpacity>
          ))}
        </View>
      </View>

      <View style={styles.inputGroup}>
        <Text style={styles.label}>тГдт╣┤ *</Text>
        <View style={styles.gradeSelector}>
          {['жФўТаА1т╣┤ућЪ', 'жФўТаА2т╣┤ућЪ', 'жФўТаА3т╣┤ућЪ'].map((grade) => (
            <TouchableOpacity
              key={grade}
              style={[
                styles.gradeOption,
                formData.grade === grade && styles.gradeOptionSelected
              ]}
              onPress={() => setFormData({ ...formData, grade })}
            >
              <Text style={[
                styles.gradeOptionText,
                formData.grade === grade && styles.gradeOptionTextSelected
              ]}>
                {grade}
              </Text>
            </TouchableOpacity>
          ))}
        </View>
      </View>

      <TouchableOpacity
        style={styles.nextButton}
        onPress={() => setCurrentStep(2)}
      >
        <Text style={styles.nextButtonText}>ТгАсЂИ</Text>
        <Ionicons name="arrow-forward" size={20} color="white" />
      </TouchableOpacity>
    </View>
  );

  const renderStep2 = () => (
    <View style={styles.stepContent}>
      <Text style={styles.stepTitle}>СйЈТЅђсЃ╗тГдТаАТЃЁта▒</Text>
      
      <View style={styles.inputGroup}>
        <Text style={styles.label}>жЃйжЂЊт║юуюї *</Text>
        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.prefectureScroll}>
          <View style={styles.prefectureContainer}>
            {PREFECTURES.map((prefecture) => (
              <TouchableOpacity
                key={prefecture}
                style={[
                  styles.prefectureOption,
                  formData.prefecture === prefecture && styles.prefectureOptionSelected
                ]}
                onPress={() => setFormData({ ...formData, prefecture })}
              >
                <Text style={[
                  styles.prefectureOptionText,
                  formData.prefecture === prefecture && styles.prefectureOptionTextSelected
                ]}>
                  {prefecture}
                </Text>
              </TouchableOpacity>
            ))}
          </View>
        </ScrollView>
      </View>

      <View style={styles.inputGroup}>
        <Text style={styles.label}>тГдТаАтљЇ</Text>
        <TextInput
          style={styles.input}
          value={formData.school_name}
          onChangeText={(text) => setFormData({ ...formData, school_name: text })}
          placeholder="РЌІРЌІжФўуГЅтГдТаА"
          placeholderTextColor="#9CA3AF"
        />
      </View>

      <TouchableOpacity
        style={styles.nextButton}
        onPress={() => setCurrentStep(3)}
      >
        <Text style={styles.nextButtonText}>ТгАсЂИ</Text>
        <Ionicons name="arrow-forward" size={20} color="white" />
      </TouchableOpacity>
    </View>
  );

  const renderStep3 = () => (
    <View style={styles.stepContent}>
      <Text style={styles.stepTitle}>С║ѕу«ЌУеГт«џ</Text>
      
      <View style={styles.inputGroup}>
        <Text style={styles.label}>ТюѕсЂ«С║ѕу«Ќ</Text>
        <Text style={styles.helperText}>сЂіт░ЈжЂБсЂёсѓёсѓбсЃФсЃљсѓцсЃѕС╗БсЂфсЂЕ</Text>
        <View style={styles.budgetInputContainer}>
          <Text style={styles.budgetPrefix}>┬Ц</Text>
          <TextInput
            style={styles.budgetInput}
            value={formData.monthly_budget.toString()}
            onChangeText={(text) => setFormData({
              ...formData,
              monthly_budget: parseInt(text.replace(/[^0-9]/g, '')) || 0
            })}
            placeholder="30000"
            placeholderTextColor="#9CA3AF"
            keyboardType="numeric"
          />
        </View>
      </View>

      <View style={styles.inputGroup}>
        <Text style={styles.label}>уЈЙтюесЂ«У▓»жЄЉжАЇ</Text>
        <View style={styles.budgetInputContainer}>
          <Text style={styles.budgetPrefix}>┬Ц</Text>
          <TextInput
            style={styles.budgetInput}
            value={formData.savings_balance === 0 ? '' : formData.savings_balance.toString()}
            onChangeText={(text) => setFormData({
              ...formData,
              savings_balance: text === '' ? 0 : parseInt(text.replace(/[^0-9]/g, '')) || 0
            })}
            placeholder="0"
            placeholderTextColor="#9CA3AF"
            keyboardType="numeric"
          />
        </View>
      </View>

      <TouchableOpacity
        style={[styles.completeButton, loading && styles.completeButtonDisabled]}
        onPress={handleSave}
        disabled={loading}
      >
        {loading ? (
          <ActivityIndicator size="small" color="white" />
        ) : (
          <>
            <Text style={styles.completeButtonText}>УеГт«џт«їС║є</Text>
            <Ionicons name="checkmark" size={20} color="white" />
          </>
        )}
      </TouchableOpacity>
    </View>
  );

  return (
    <ScrollView style={styles.container}>
      <View style={styles.header}>
        <View style={styles.logoContainer}>
          <Text style={styles.logo}>­Ъњ░</Text>
        </View>
        <Text style={styles.title}>тѕЮТюЪУеГт«џ</Text>
        <Text style={styles.subtitle}>сѓбсЃЌсЃфсѓњСй┐сЂєсЂЪсѓЂсЂ«УеГт«џсѓњсЂЌсЂЙсЂЌсѓЄсЂє</Text>
        
        {/* сЃЌсЃГсѓ░сЃгсѓ╣сЃљсЃ╝ */}
        <View style={styles.progressContainer}>
          {[1, 2, 3].map((step) => (
            <View
              key={step}
              style={[
                styles.progressDot,
                currentStep >= step && styles.progressDotActive
              ]}
            />
          ))}
        </View>
      </View>

      {currentStep === 1 && renderStep1()}
      {currentStep === 2 && renderStep2()}
      {currentStep === 3 && renderStep3()}

      {/* Тѕ╗сѓІсЃюсѓ┐сЃ│ */}
      {currentStep > 1 && (
        <TouchableOpacity
          style={styles.backButton}
          onPress={() => setCurrentStep(currentStep - 1)}
        >
          <Ionicons name="arrow-back" size={20} color="#6B7280" />
          <Text style={styles.backButtonText}>Тѕ╗сѓІ</Text>
        </TouchableOpacity>
      )}
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
  },
  header: {
    alignItems: 'center',
    paddingTop: 60,
    paddingBottom: 32,
    paddingHorizontal: 20,
  },
  logoContainer: {
    width: 80,
    height: 80,
    backgroundColor: '#3B82F6',
    borderRadius: 40,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 16,
  },
  logo: {
    fontSize: 40,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#111827',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    color: '#6B7280',
    textAlign: 'center',
    marginBottom: 24,
  },
  progressContainer: {
    flexDirection: 'row',
    gap: 8,
  },
  progressDot: {
    width: 12,
    height: 12,
    borderRadius: 6,
    backgroundColor: '#E5E7EB',
  },
  progressDotActive: {
    backgroundColor: '#3B82F6',
  },
  stepContent: {
    paddingHorizontal: 20,
  },
  stepTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#111827',
    marginBottom: 24,
    textAlign: 'center',
  },
  inputGroup: {
    marginBottom: 24,
  },
  label: {
    fontSize: 16,
    fontWeight: '600',
    color: '#111827',
    marginBottom: 8,
  },
  helperText: {
    fontSize: 14,
    color: '#6B7280',
    marginBottom: 8,
  },
  input: {
    borderWidth: 2,
    borderColor: '#E5E7EB',
    borderRadius: 8,
    paddingHorizontal: 16,
    paddingVertical: 12,
    fontSize: 16,
    backgroundColor: 'white',
    color: '#111827',
  },
  ageSelector: {
    flexDirection: 'row',
    gap: 8,
  },
  ageOption: {
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderWidth: 2,
    borderColor: '#E5E7EB',
    borderRadius: 8,
    backgroundColor: 'white',
  },
  ageOptionSelected: {
    borderColor: '#3B82F6',
    backgroundColor: '#EBF8FF',
  },
  ageOptionText: {
    fontSize: 14,
    color: '#6B7280',
  },
  ageOptionTextSelected: {
    color: '#3B82F6',
    fontWeight: '600',
  },
  gradeSelector: {
    gap: 8,
  },
  gradeOption: {
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderWidth: 2,
    borderColor: '#E5E7EB',
    borderRadius: 8,
    backgroundColor: 'white',
    alignItems: 'center',
  },
  gradeOptionSelected: {
    borderColor: '#3B82F6',
    backgroundColor: '#EBF8FF',
  },
  gradeOptionText: {
    fontSize: 16,
    color: '#6B7280',
  },
  gradeOptionTextSelected: {
    color: '#3B82F6',
    fontWeight: '600',
  },
  prefectureScroll: {
    maxHeight: 150,
  },
  prefectureContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 8,
  },
  prefectureOption: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderWidth: 1,
    borderColor: '#E5E7EB',
    borderRadius: 16,
    backgroundColor: 'white',
  },
  prefectureOptionSelected: {
    borderColor: '#3B82F6',
    backgroundColor: '#EBF8FF',
  },
  prefectureOptionText: {
    fontSize: 14,
    color: '#6B7280',
  },
  prefectureOptionTextSelected: {
    color: '#3B82F6',
    fontWeight: '600',
  },
  budgetInputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: '#E5E7EB',
    borderRadius: 8,
    backgroundColor: 'white',
  },
  budgetPrefix: {
    paddingLeft: 16,
    fontSize: 16,
    color: '#6B7280',
  },
  budgetInput: {
    flex: 1,
    paddingHorizontal: 8,
    paddingVertical: 12,
    fontSize: 16,
    color: '#111827',
  },
  nextButton: {
    backgroundColor: '#3B82F6',
    paddingVertical: 14,
    borderRadius: 8,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 8,
    marginTop: 24,
  },
  nextButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '600',
  },
  completeButton: {
    backgroundColor: '#10B981',
    paddingVertical: 14,
    borderRadius: 8,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 8,
    marginTop: 24,
  },
  completeButtonDisabled: {
    opacity: 0.6,
  },
  completeButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '600',
  },
  backButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 8,
    paddingVertical: 12,
    marginTop: 16,
    marginHorizontal: 20,
  },
  backButtonText: {
    fontSize: 16,
    color: '#6B7280',
  },
});